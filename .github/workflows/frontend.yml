name: Continuous Frontend Integration
on:
  push:
    branches:
      - master
      - l4
    paths:
      - "frontend/**"
      - ".github/workflows/frontend.yml"

  pull_request:
    branches:
      - master
      - l4
    paths:
      - "frontend/**"
      - ".github/workflows/frontend.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache nodemodules
        id: cache
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: node-modules-cache

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - name: Install dependencies
        run: cd frontend && npm i

      - name: Build
        run: cd frontend && npm run build

      - name: Generate Artifact
        run: cd frontend/build && zip -r frontendartifact.zip ./ -x '*.git*'

      - name: Store Artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend-artifact
          path: frontend/build/frontendartifact.zip

  lint:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache nodemodules
        id: cache
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: node-modules-cache

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd frontend && npm i

      - name: Lint the code
        run: cd frontend && npm run lint

  tests:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache nodemodules
        id: cache
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: node-modules-cache

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd frontend && npm i

      - name: Test the code
        run: cd frontend && npm t

  static-analysis:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          language: javascript

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - name: Install dependencies
        run: cd frontend && npm i

      - name: Build
        run: cd frontend && npm run build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  security-audit:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - run: node -v

      - name: Check for security issues
        run: cd frontend && npm audit --audit-level=medium
